// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
function checkAuth() {
    if (localStorage.getItem('adminAuth') !== 'true') {
        window.location.href = '/admin-login.html';
        return false;
    }
    return true;
}

// Logout
function logout() {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?')) {
        localStorage.removeItem('adminAuth');
        localStorage.removeItem('adminUser');
        localStorage.removeItem('adminLoginTime');
        window.location.href = '/admin-login.html';
    }
}

// Show section
function showSection(sectionId) {
    // Hide all sections
    document.querySelectorAll('.admin-section').forEach(section => {
        section.classList.add('hidden');
    });
    
    // Show selected section
    document.getElementById(`section-${sectionId}`).classList.remove('hidden');
    
    // Update sidebar
    document.querySelectorAll('.sidebar-link').forEach(link => {
        link.classList.remove('sidebar-active');
        if (link.dataset.section === sectionId) {
            link.classList.add('sidebar-active');
        }
    });
    
    // Load section data
    loadSectionData(sectionId);
}

// Load section data
function loadSectionData(sectionId) {
    switch(sectionId) {
        case 'dashboard':
            loadDashboard();
            break;
        case 'cases':
            loadCases();
            break;
        case 'solutions':
            loadSolutions();
            break;
        case 'requests':
            loadRequests();
            break;
        case 'users':
            loadUsers();
            break;
        case 'partners':
            loadPartners();
            break;
    }
}

// Load Dashboard
function loadDashboard() {
    // Update stats
    const cases = JSON.parse(localStorage.getItem('cases') || '[]');
    const solutions = JSON.parse(localStorage.getItem('solutions') || '[]');
    const requests = JSON.parse(localStorage.getItem('requests') || '[]');
    const users = JSON.parse(localStorage.getItem('adminUsers') || '[]');
    const newRequests = requests.filter(r => r.status === 'new').length;
    
    document.getElementById('statCases').textContent = cases.length;
    document.getElementById('statSolutions').textContent = solutions.length;
    document.getElementById('statRequests').textContent = requests.length;
    document.getElementById('statNewRequests').textContent = newRequests;
    
    // Update users count in sidebar
    document.getElementById('usersCount').textContent = `${users.length} –∫–ª–∏–µ–Ω—Ç–æ–≤`;
    
    // Update login time
    const loginTime = localStorage.getItem('adminLoginTime');
    if (loginTime) {
        const time = new Date(loginTime);
        document.getElementById('loginTime').textContent = formatTime(time);
    }
}

// Format time
function formatTime(date) {
    const now = new Date();
    const diff = now - date;
    const minutes = Math.floor(diff / 60000);
    
    if (minutes < 1) return '–¢–æ–ª—å–∫–æ —á—Ç–æ';
    if (minutes < 60) return `${minutes} –º–∏–Ω. –Ω–∞–∑–∞–¥`;
    
    const hours = Math.floor(minutes / 60);
    if (hours < 24) return `${hours} —á. –Ω–∞–∑–∞–¥`;
    
    return date.toLocaleDateString('ru-RU');
}

// Load Cases
function loadCases() {
    const cases = JSON.parse(localStorage.getItem('cases') || '[]');
    const container = document.getElementById('casesList');
    
    if (cases.length === 0) {
        container.innerHTML = `
            <div class="col-span-2 bg-white rounded-2xl shadow-sm p-12 text-center">
                <div class="text-6xl mb-4">üíº</div>
                <h3 class="text-2xl font-bold mb-2">–ü–æ–∫–∞ –Ω–µ—Ç –∫–µ–π—Å–æ–≤</h3>
                <p class="text-gray-600 mb-6">–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π –∫–µ–π—Å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å</p>
                <button onclick="openAddCaseModal()" class="bg-primary text-white px-6 py-3 rounded-xl font-semibold hover:bg-primary/90 transition">
                    + –î–æ–±–∞–≤–∏—Ç—å –∫–µ–π—Å
                </button>
            </div>
        `;
        return;
    }
    
    container.innerHTML = cases.map(caseItem => `
        <div class="bg-white rounded-2xl shadow-sm overflow-hidden border-2 border-gray-100 hover:border-primary/30 transition">
            <div class="h-48 bg-gradient-to-br from-primary/10 to-secondary/10 flex items-center justify-center">
                <span class="text-6xl">${caseItem.icon || 'üíº'}</span>
            </div>
            <div class="p-6">
                <h3 class="text-xl font-bold mb-2">${caseItem.title}</h3>
                <p class="text-gray-600 mb-4 line-clamp-2">${caseItem.description}</p>
                <div class="flex items-center justify-between">
                    <span class="text-sm text-gray-500">${caseItem.date || '–î–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞'}</span>
                    <div class="flex gap-2">
                        <button onclick="editCase('${caseItem.id}')" class="px-4 py-2 bg-blue-50 text-blue-600 rounded-lg hover:bg-blue-100 transition">
                            ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                        </button>
                        <button onclick="deleteCase('${caseItem.id}')" class="px-4 py-2 bg-red-50 text-red-600 rounded-lg hover:bg-red-100 transition">
                            üóëÔ∏è
                        </button>
                    </div>
                </div>
            </div>
        </div>
    `).join('');
}

// Load Solutions
function loadSolutions() {
    const solutions = JSON.parse(localStorage.getItem('solutions') || '[]');
    const container = document.getElementById('solutionsList');
    
    if (solutions.length === 0) {
        container.innerHTML = `
            <div class="col-span-2 bg-white rounded-2xl shadow-sm p-12 text-center">
                <div class="text-6xl mb-4">üì¶</div>
                <h3 class="text-2xl font-bold mb-2">–ü–æ–∫–∞ –Ω–µ—Ç —Ä–µ—à–µ–Ω–∏–π</h3>
                <p class="text-gray-600 mb-6">–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤–æ–µ –∫–æ—Ä–æ–±–æ—á–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ</p>
                <button onclick="openAddSolutionModal()" class="bg-primary text-white px-6 py-3 rounded-xl font-semibold hover:bg-primary/90 transition">
                    + –î–æ–±–∞–≤–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ
                </button>
            </div>
        `;
        return;
    }
    
    container.innerHTML = solutions.map(solution => `
        <div class="bg-white rounded-2xl shadow-sm overflow-hidden border-2 border-gray-100 hover:border-primary/30 transition">
            <div class="h-48 bg-gradient-to-br from-${solution.available ? 'primary' : 'gray'}/10 to-secondary/10 flex items-center justify-center relative">
                <span class="text-6xl">${solution.icon || 'üì¶'}</span>
                <div class="absolute top-4 right-4">
                    <span class="px-3 py-1 rounded-full text-xs font-bold ${solution.available ? 'bg-green-100 text-green-700' : 'bg-yellow-100 text-yellow-700'}">
                        ${solution.available ? '‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ' : '‚è≥ –°–∫–æ—Ä–æ'}
                    </span>
                </div>
            </div>
            <div class="p-6">
                <h3 class="text-xl font-bold mb-2">${solution.title}</h3>
                <p class="text-gray-600 mb-4 line-clamp-2">${solution.description}</p>
                <div class="flex items-center justify-between mb-4">
                    <div class="text-2xl font-bold text-primary">${solution.price}</div>
                    <div class="text-sm text-gray-500">${solution.launchTime || '2-3 –¥–Ω—è'}</div>
                </div>
                <div class="flex gap-2">
                    <button onclick="editSolution('${solution.id}')" class="flex-1 px-4 py-2 bg-blue-50 text-blue-600 rounded-lg hover:bg-blue-100 transition">
                        ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                    </button>
                    <button onclick="deleteSolution('${solution.id}')" class="px-4 py-2 bg-red-50 text-red-600 rounded-lg hover:bg-red-100 transition">
                        üóëÔ∏è
                    </button>
                </div>
            </div>
        </div>
    `).join('');
}

// Load Requests
function loadRequests() {
    const requests = JSON.parse(localStorage.getItem('requests') || '[]');
    const tbody = document.getElementById('requestsTable');
    
    if (requests.length === 0) {
        tbody.innerHTML = `
            <tr>
                <td colspan="6" class="px-6 py-12 text-center text-gray-500">
                    –ü–æ–∫–∞ –Ω–µ—Ç –∑–∞—è–≤–æ–∫
                </td>
            </tr>
        `;
        return;
    }
    
    tbody.innerHTML = requests.map(request => `
        <tr class="border-b border-gray-200 hover:bg-gray-50">
            <td class="px-6 py-4 text-sm">${formatDate(request.date)}</td>
            <td class="px-6 py-4 text-sm font-semibold">${request.name}</td>
            <td class="px-6 py-4 text-sm">${request.contact}</td>
            <td class="px-6 py-4 text-sm">${request.message || '-'}</td>
            <td class="px-6 py-4">
                <select onchange="updateRequestStatus('${request.id}', this.value)" class="px-3 py-1 rounded-lg text-sm border-2 ${getStatusColor(request.status)}">
                    <option value="new" ${request.status === 'new' ? 'selected' : ''}>–ù–æ–≤–∞—è</option>
                    <option value="processing" ${request.status === 'processing' ? 'selected' : ''}>–í —Ä–∞–±–æ—Ç–µ</option>
                    <option value="completed" ${request.status === 'completed' ? 'selected' : ''}>–ó–∞–≤–µ—Ä—à–µ–Ω–∞</option>
                    <option value="rejected" ${request.status === 'rejected' ? 'selected' : ''}>–û—Ç–∫–ª–æ–Ω–µ–Ω–∞</option>
                </select>
            </td>
            <td class="px-6 py-4">
                <button onclick="deleteRequest('${request.id}')" class="text-red-600 hover:text-red-700">
                    üóëÔ∏è
                </button>
            </td>
        </tr>
    `).join('');
    
    // Update count
    const newCount = requests.filter(r => r.status === 'new').length;
    document.getElementById('requestsCount').textContent = `${newCount} –Ω–æ–≤—ã—Ö`;
}

function formatDate(dateStr) {
    if (!dateStr) return '-';
    const date = new Date(dateStr);
    return date.toLocaleDateString('ru-RU') + ' ' + date.toLocaleTimeString('ru-RU', {hour: '2-digit', minute: '2-digit'});
}

function getStatusColor(status) {
    switch(status) {
        case 'new': return 'border-green-200 bg-green-50 text-green-700';
        case 'processing': return 'border-blue-200 bg-blue-50 text-blue-700';
        case 'completed': return 'border-gray-200 bg-gray-50 text-gray-700';
        case 'rejected': return 'border-red-200 bg-red-50 text-red-700';
        default: return 'border-gray-200';
    }
}

// Update request status
function updateRequestStatus(id, status) {
    const requests = JSON.parse(localStorage.getItem('requests') || '[]');
    const index = requests.findIndex(r => r.id === id);
    if (index !== -1) {
        requests[index].status = status;
        localStorage.setItem('requests', JSON.stringify(requests));
        loadRequests();
    }
}

// Delete request
function deleteRequest(id) {
    if (confirm('–£–¥–∞–ª–∏—Ç—å –∑–∞—è–≤–∫—É?')) {
        let requests = JSON.parse(localStorage.getItem('requests') || '[]');
        requests = requests.filter(r => r.id !== id);
        localStorage.setItem('requests', JSON.stringify(requests));
        loadRequests();
    }
}

// Modal functions (placeholder)
function openAddCaseModal() {
    const title = prompt('–ù–∞–∑–≤–∞–Ω–∏–µ –∫–µ–π—Å–∞:');
    if (!title) return;
    
    const description = prompt('–û–ø–∏—Å–∞–Ω–∏–µ:');
    const icon = prompt('–ò–∫–æ–Ω–∫–∞ (emoji):') || 'üíº';
    
    const cases = JSON.parse(localStorage.getItem('cases') || '[]');
    cases.push({
        id: Date.now().toString(),
        title,
        description,
        icon,
        date: new Date().toLocaleDateString('ru-RU')
    });
    
    localStorage.setItem('cases', JSON.stringify(cases));
    loadCases();
    loadDashboard();
}

function editCase(id) {
    alert('–§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
}

function deleteCase(id) {
    if (confirm('–£–¥–∞–ª–∏—Ç—å –∫–µ–π—Å?')) {
        let cases = JSON.parse(localStorage.getItem('cases') || '[]');
        cases = cases.filter(c => c.id !== id);
        localStorage.setItem('cases', JSON.stringify(cases));
        loadCases();
        loadDashboard();
    }
}

function openAddSolutionModal() {
    const title = prompt('–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è:');
    if (!title) return;
    
    const description = prompt('–û–ø–∏—Å–∞–Ω–∏–µ:');
    const price = prompt('–¶–µ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç 150K‚ÇΩ):');
    const icon = prompt('–ò–∫–æ–Ω–∫–∞ (emoji):') || 'üì¶';
    const available = confirm('–î–æ—Å—Ç—É–ø–Ω–æ —Å–µ–π—á–∞—Å?');
    
    const solutions = JSON.parse(localStorage.getItem('solutions') || '[]');
    solutions.push({
        id: Date.now().toString(),
        title,
        description,
        price,
        icon,
        available,
        launchTime: '2-3 –¥–Ω—è'
    });
    
    localStorage.setItem('solutions', JSON.stringify(solutions));
    loadSolutions();
    loadDashboard();
}

function editSolution(id) {
    alert('–§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
}

function deleteSolution(id) {
    if (confirm('–£–¥–∞–ª–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ?')) {
        let solutions = JSON.parse(localStorage.getItem('solutions') || '[]');
        solutions = solutions.filter(s => s.id !== id);
        localStorage.setItem('solutions', JSON.stringify(solutions));
        loadSolutions();
        loadDashboard();
    }
}

// Export data
function exportData() {
    const data = {
        cases: JSON.parse(localStorage.getItem('cases') || '[]'),
        solutions: JSON.parse(localStorage.getItem('solutions') || '[]'),
        requests: JSON.parse(localStorage.getItem('requests') || '[]')
    };
    
    const blob = new Blob([JSON.stringify(data, null, 2)], {type: 'application/json'});
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `miniapp-data-${new Date().toISOString().split('T')[0]}.json`;
    a.click();
}

// Clear data
function clearData() {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã? –í—Å–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ!')) {
        if (confirm('–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?')) {
            localStorage.removeItem('cases');
            localStorage.removeItem('solutions');
            localStorage.removeItem('requests');
            alert('–í—Å–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã');
            location.reload();
        }
    }
}

// Load Users
function loadUsers() {
    const users = JSON.parse(localStorage.getItem('adminUsers') || '[]');
    const container = document.getElementById('usersList');
    
    if (users.length === 0) {
        container.innerHTML = `
            <div class="bg-white rounded-2xl shadow-sm p-12 text-center">
                <div class="text-6xl mb-4">üë•</div>
                <h3 class="text-2xl font-bold mb-2">–ü–æ–∫–∞ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</h3>
                <p class="text-gray-600 mb-6">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ—è–≤—è—Ç—Å—è –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –≤—Ä—É—á–Ω—É—é</p>
                <button onclick="openAddUserModal()" class="bg-primary text-white px-6 py-3 rounded-xl font-semibold hover:bg-primary/90 transition">
                    + –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                </button>
            </div>
        `;
        return;
    }
    
    container.innerHTML = users.map(user => `
        <div class="bg-white rounded-2xl shadow-sm p-6">
            <div class="flex items-start justify-between">
                <div class="flex items-start space-x-4 flex-1">
                    <div class="w-16 h-16 bg-gradient-to-br from-primary to-secondary rounded-full flex items-center justify-center text-white text-2xl font-bold">
                        ${user.name.charAt(0).toUpperCase()}
                    </div>
                    <div class="flex-1">
                        <h3 class="text-xl font-bold mb-1">${user.name}</h3>
                        <p class="text-gray-600 text-sm mb-3">${user.email}</p>
                        <div class="flex gap-2 mb-3">
                            <span class="bg-green-100 text-green-700 px-3 py-1 rounded-full text-xs font-bold">
                                ${user.products ? user.products.length : 0} –ø—Ä–æ–¥—É–∫—Ç–æ–≤
                            </span>
                            <span class="bg-blue-100 text-blue-700 px-3 py-1 rounded-full text-xs font-bold">
                                ${user.subscriptions ? user.subscriptions.length : 0} –ø–æ–¥–ø–∏—Å–æ–∫
                            </span>
                        </div>
                        <p class="text-xs text-gray-500">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: ${formatDate(user.registrationDate)}</p>
                    </div>
                </div>
                <div class="flex gap-2">
                    <button onclick="manageUserProducts('${user.id}')" class="px-4 py-2 bg-primary text-white rounded-lg hover:bg-primary/90 transition text-sm">
                        üì± –ü—Ä–æ–¥—É–∫—Ç—ã
                    </button>
                    <button onclick="manageUserSubscriptions('${user.id}')" class="px-4 py-2 bg-secondary text-white rounded-lg hover:bg-secondary/90 transition text-sm">
                        üîÑ –ü–æ–¥–ø–∏—Å–∫–∏
                    </button>
                    <button onclick="editUser('${user.id}')" class="px-4 py-2 bg-blue-50 text-blue-600 rounded-lg hover:bg-blue-100 transition text-sm">
                        ‚úèÔ∏è
                    </button>
                    <button onclick="deleteUser('${user.id}')" class="px-4 py-2 bg-red-50 text-red-600 rounded-lg hover:bg-red-100 transition text-sm">
                        üóëÔ∏è
                    </button>
                </div>
            </div>
        </div>
    `).join('');
}

// Manage user products
function manageUserProducts(userId) {
    const users = JSON.parse(localStorage.getItem('adminUsers') || '[]');
    const user = users.find(u => u.id === userId);
    
    if (!user) return;
    
    const availableProducts = [
        { id: 'real-estate', name: 'Mini App –¥–ª—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏', icon: 'üè¢' },
        { id: 'crypto', name: 'Mini App –¥–ª—è –∫—Ä–∏–ø—Ç–æ-–æ–±–º–µ–Ω–Ω–∏–∫–æ–≤', icon: 'üí±' },
        { id: 'custom', name: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç', icon: '‚ö°' }
    ];
    
    const userProducts = user.products || [];
    
    let html = '<div style="max-width: 500px">';
    html += `<h3 class="text-xl font-bold mb-4">–ü—Ä–æ–¥—É–∫—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user.name}</h3>`;
    
    availableProducts.forEach(product => {
        const hasProduct = userProducts.some(p => p.id === product.id);
        html += `
            <label class="flex items-center justify-between p-4 border-2 border-gray-200 rounded-xl mb-3 cursor-pointer hover:border-primary">
                <div class="flex items-center space-x-3">
                    <span class="text-3xl">${product.icon}</span>
                    <span class="font-semibold">${product.name}</span>
                </div>
                <input type="checkbox" ${hasProduct ? 'checked' : ''} 
                    onchange="toggleUserProduct('${userId}', '${product.id}', '${product.name}', '${product.icon}', this.checked)"
                    class="w-5 h-5 text-primary">
            </label>
        `;
    });
    
    html += '</div>';
    
    if (confirm('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏ —á–µ—Ä–µ–∑ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∏–∂–µ:\n\n‚úÖ - –í—ã–¥–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç\n‚ùå - –û—Ç–æ–±—Ä–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç')) {
        // –í —Ä–µ–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        const action = prompt(`–í–≤–µ–¥–∏—Ç–µ:\n+ ${availableProducts[0].id} - –≤—ã–¥–∞—Ç—å\n- ${availableProducts[0].id} - –æ—Ç–æ–±—Ä–∞—Ç—å\n\n–ü—Ä–∏–º–µ—Ä: + real-estate`);
        
        if (action) {
            const isAdd = action.startsWith('+');
            const productId = action.slice(1).trim();
            const product = availableProducts.find(p => p.id === productId);
            
            if (product) {
                toggleUserProduct(userId, product.id, product.name, product.icon, isAdd);
            }
        }
    }
}

// Toggle user product
function toggleUserProduct(userId, productId, productName, productIcon, add) {
    const users = JSON.parse(localStorage.getItem('adminUsers') || '[]');
    const userIndex = users.findIndex(u => u.id === userId);
    
    if (userIndex === -1) return;
    
    if (!users[userIndex].products) {
        users[userIndex].products = [];
    }
    
    if (add) {
        // Add product
        if (!users[userIndex].products.some(p => p.id === productId)) {
            users[userIndex].products.push({
                id: productId,
                name: productName,
                icon: productIcon,
                dateAdded: new Date().toISOString(),
                status: 'active'
            });
            alert(`‚úÖ –ü—Ä–æ–¥—É–∫—Ç "${productName}" –≤—ã–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!`);
        }
    } else {
        // Remove product
        users[userIndex].products = users[userIndex].products.filter(p => p.id !== productId);
        alert(`‚ùå –ü—Ä–æ–¥—É–∫—Ç "${productName}" –æ—Ç–æ–∑–≤–∞–Ω!`);
    }
    
    localStorage.setItem('adminUsers', JSON.stringify(users));
    loadUsers();
}

// Manage user subscriptions
function manageUserSubscriptions(userId) {
    const users = JSON.parse(localStorage.getItem('adminUsers') || '[]');
    const user = users.find(u => u.id === userId);
    
    if (!user) return;
    
    const availableSubscriptions = [
        { id: 'basic', name: '–ë–∞–∑–æ–≤–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞', price: 5000, icon: 'üõ†Ô∏è' },
        { id: 'premium', name: '–ü—Ä–µ–º–∏—É–º –ø–æ–¥–¥–µ—Ä–∂–∫–∞', price: 15000, icon: '‚≠ê' },
        { id: 'enterprise', name: 'Enterprise –ø–æ–¥–¥–µ—Ä–∂–∫–∞', price: 30000, icon: 'üèÜ' }
    ];
    
    const action = prompt(`–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏: ${user.name}\n\n–í–≤–µ–¥–∏—Ç–µ:\n+ basic - –≤—ã–¥–∞—Ç—å –±–∞–∑–æ–≤—É—é\n- basic - –æ—Ç–º–µ–Ω–∏—Ç—å\n\n–î–æ—Å—Ç—É–ø–Ω—ã–µ: basic, premium, enterprise`);
    
    if (action) {
        const isAdd = action.startsWith('+');
        const subId = action.slice(1).trim();
        const subscription = availableSubscriptions.find(s => s.id === subId);
        
        if (subscription) {
            toggleUserSubscription(userId, subscription.id, subscription.name, subscription.price, isAdd);
        }
    }
}

// Toggle user subscription
function toggleUserSubscription(userId, subId, subName, price, add) {
    const users = JSON.parse(localStorage.getItem('adminUsers') || '[]');
    const userIndex = users.findIndex(u => u.id === userId);
    
    if (userIndex === -1) return;
    
    if (!users[userIndex].subscriptions) {
        users[userIndex].subscriptions = [];
    }
    
    if (add) {
        if (!users[userIndex].subscriptions.some(s => s.id === subId)) {
            users[userIndex].subscriptions.push({
                id: subId,
                name: subName,
                price: price,
                dateAdded: new Date().toISOString(),
                nextPayment: new Date(Date.now() + 30*24*60*60*1000).toISOString(),
                status: 'active'
            });
            alert(`‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ "${subName}" –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!`);
        }
    } else {
        users[userIndex].subscriptions = users[userIndex].subscriptions.filter(s => s.id !== subId);
        alert(`‚ùå –ü–æ–¥–ø–∏—Å–∫–∞ "${subName}" –æ—Ç–º–µ–Ω–µ–Ω–∞!`);
    }
    
    localStorage.setItem('adminUsers', JSON.stringify(users));
    loadUsers();
}

// Add user
function openAddUserModal() {
    const name = prompt('–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è:');
    if (!name) return;
    
    const email = prompt('Email:');
    if (!email) return;
    
    const phone = prompt('–¢–µ–ª–µ—Ñ–æ–Ω:');
    
    const users = JSON.parse(localStorage.getItem('adminUsers') || '[]');
    users.push({
        id: Date.now().toString(),
        name: name,
        email: email,
        phone: phone || '',
        registrationDate: new Date().toISOString(),
        products: [],
        subscriptions: []
    });
    
    localStorage.setItem('adminUsers', JSON.stringify(users));
    loadUsers();
    loadDashboard();
    alert('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω!');
}

// Edit user
function editUser(userId) {
    const users = JSON.parse(localStorage.getItem('adminUsers') || '[]');
    const user = users.find(u => u.id === userId);
    
    if (!user) return;
    
    const name = prompt('–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è:', user.name);
    if (!name) return;
    
    const phone = prompt('–¢–µ–ª–µ—Ñ–æ–Ω:', user.phone);
    
    const userIndex = users.findIndex(u => u.id === userId);
    users[userIndex].name = name;
    users[userIndex].phone = phone;
    
    localStorage.setItem('adminUsers', JSON.stringify(users));
    loadUsers();
    alert('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω!');
}

// Delete user
function deleteUser(userId) {
    if (confirm('–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?\n\n–í—Å–µ –µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç—ã –∏ –ø–æ–¥–ø–∏—Å–∫–∏ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã!')) {
        let users = JSON.parse(localStorage.getItem('adminUsers') || '[]');
        users = users.filter(u => u.id !== userId);
        localStorage.setItem('adminUsers', JSON.stringify(users));
        loadUsers();
        loadDashboard();
        alert('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω!');
    }
}

// Initialize
document.addEventListener('DOMContentLoaded', function() {
    // Check auth
    if (!checkAuth()) return;
    
    // Set username
    const username = localStorage.getItem('adminUser') || 'Admin';
    document.getElementById('adminUsername').textContent = username;
    
    // Load dashboard
    loadDashboard();
    
    // Add demo data if empty
    if (!localStorage.getItem('cases')) {
        localStorage.setItem('cases', JSON.stringify([
            {
                id: '1',
                title: 'Mosca Caff√®',
                description: '–°–µ—Ç—å –∫–æ—Ñ–µ–µ–Ω —Å –ø—Ä–æ–≥—Ä–∞–º–º–æ–π –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏',
                icon: '‚òï',
                date: '15.10.2024'
            },
            {
                id: '2',
                title: 'Alfin',
                description: '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è –±–∏–∑–Ω–µ—Å–∞',
                icon: 'üí∞',
                date: '12.10.2024'
            },
            {
                id: '3',
                title: '–ö—É–∫—É—à–∫–∞',
                description: '–î–æ—Å—Ç–∞–≤–∫–∞ –≥–æ—Ç–æ–≤—ã—Ö –±–ª—é–¥',
                icon: 'üçî',
                date: '10.10.2024'
            },
            {
                id: '4',
                title: '–£–ª—ã–±–∫–∞ –†–∞–¥—É–≥–∏',
                description: '–î–µ—Ç—Å–∫–∏–π —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π —Ü–µ–Ω—Ç—Ä',
                icon: 'üé™',
                date: '08.10.2024'
            }
        ]));
    }
    
    if (!localStorage.getItem('solutions')) {
        localStorage.setItem('solutions', JSON.stringify([
            {
                id: '1',
                title: 'Mini App –¥–ª—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏',
                description: '–ö–∞—Ç–∞–ª–æ–≥ –æ–±—ä–µ–∫—Ç–æ–≤, —Ñ–∏–ª—å—Ç—Ä—ã, –∑–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä',
                price: '–æ—Ç 150K‚ÇΩ',
                icon: 'üè¢',
                available: true,
                launchTime: '2-3 –¥–Ω—è'
            },
            {
                id: '2',
                title: 'Mini App –¥–ª—è –∫—Ä–∏–ø—Ç–æ-–æ–±–º–µ–Ω–Ω–∏–∫–æ–≤',
                description: '–û–±–º–µ–Ω –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã, –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã',
                price: '–æ—Ç 300K‚ÇΩ',
                icon: 'üí±',
                available: false,
                launchTime: '–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'
            }
        ]));
    }
    
    // Add demo users if empty
    if (!localStorage.getItem('adminUsers')) {
        localStorage.setItem('adminUsers', JSON.stringify([
            {
                id: '1',
                name: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
                email: 'ivan@example.com',
                phone: '+7 (999) 123-45-67',
                registrationDate: '2025-10-15T10:00:00.000Z',
                products: [
                    {
                        id: 'real-estate',
                        name: 'Mini App –¥–ª—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏',
                        icon: 'üè¢',
                        dateAdded: '2025-10-15T10:30:00.000Z',
                        status: 'active'
                    }
                ],
                subscriptions: [
                    {
                        id: 'basic',
                        name: '–ë–∞–∑–æ–≤–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
                        price: 5000,
                        dateAdded: '2025-10-15T10:30:00.000Z',
                        nextPayment: '2025-11-15T10:30:00.000Z',
                        status: 'active'
                    }
                ]
            },
            {
                id: '2',
                name: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞',
                email: 'maria@agency.com',
                phone: '+7 (999) 987-65-43',
                registrationDate: '2025-10-12T14:20:00.000Z',
                products: [
                    {
                        id: 'real-estate',
                        name: 'Mini App –¥–ª—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏',
                        icon: 'üè¢',
                        dateAdded: '2025-10-12T14:45:00.000Z',
                        status: 'active'
                    }
                ],
                subscriptions: [
                    {
                        id: 'premium',
                        name: '–ü—Ä–µ–º–∏—É–º –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
                        price: 15000,
                        dateAdded: '2025-10-12T14:45:00.000Z',
                        nextPayment: '2025-11-12T14:45:00.000Z',
                        status: 'active'
                    }
                ]
            }
        ]));
    }
    
    // Initialize partners demo data
    if (!localStorage.getItem('partners')) {
        localStorage.setItem('partners', JSON.stringify([
            {
                id: 'partner1',
                name: '–ê–ª–µ–∫—Å–µ–π –°–º–∏—Ä–Ω–æ–≤',
                email: 'alexey@example.com',
                referralCode: 'ALEXEY',
                referralsCount: 5,
                conversions: 3,
                earned: 15000,
                paid: 10000,
                balance: 5000,
                status: 'active',
                registrationDate: '2025-10-01'
            },
            {
                id: 'partner2',
                name: '–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞',
                email: 'maria@example.com',
                referralCode: 'MARIA',
                referralsCount: 3,
                conversions: 1,
                earned: 5000,
                paid: 0,
                balance: 5000,
                status: 'active',
                registrationDate: '2025-10-10'
            }
        ]));
    }
});

// Load Partners
function loadPartners() {
    const partners = JSON.parse(localStorage.getItem('partners') || '[]');
    
    // Update stats
    const totalPartners = partners.length;
    const activePartners = partners.filter(p => p.status === 'active').length;
    const totalPaid = partners.reduce((sum, p) => sum + (p.paid || 0), 0);
    const pendingPayouts = partners.reduce((sum, p) => sum + (p.balance || 0), 0);
    
    document.getElementById('totalPartners').textContent = totalPartners;
    document.getElementById('activePartners').textContent = activePartners;
    document.getElementById('totalPaid').textContent = `${totalPaid.toLocaleString('ru-RU')} ‚ÇΩ`;
    document.getElementById('pendingPayouts').textContent = `${pendingPayouts.toLocaleString('ru-RU')} ‚ÇΩ`;
    document.getElementById('partnersCount').textContent = `${totalPartners} –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤`;
    
    // Load partners table
    const tbody = document.getElementById('partnersTableBody');
    if (partners.length === 0) {
        tbody.innerHTML = '<tr><td colspan="6" class="text-center p-8 text-gray-500">–ù–µ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤</td></tr>';
        return;
    }
    
    tbody.innerHTML = partners.map(partner => {
        const conversionRate = partner.referralsCount > 0 ? 
            ((partner.conversions / partner.referralsCount) * 100).toFixed(0) : 0;
        
        return `
            <tr class="border-b border-gray-100 hover:bg-gray-50">
                <td class="p-4">
                    <div class="font-semibold">${partner.name}</div>
                    <div class="text-xs text-gray-500">${partner.email}</div>
                    <div class="text-xs text-gray-400 mt-1">–ö–æ–¥: ${partner.referralCode}</div>
                </td>
                <td class="p-4">
                    <div class="text-lg font-bold">${partner.referralsCount}</div>
                    <div class="text-xs text-gray-500">${partner.conversions} –∫—É–ø–∏–ª–∏</div>
                </td>
                <td class="p-4">
                    <span class="px-3 py-1 rounded-full text-xs font-bold ${conversionRate > 30 ? 'bg-green-100 text-green-700' : 'bg-gray-100 text-gray-600'}">
                        ${conversionRate}%
                    </span>
                </td>
                <td class="p-4">
                    <div class="font-bold text-primary">${partner.earned.toLocaleString('ru-RU')} ‚ÇΩ</div>
                    <div class="text-xs text-gray-500">–ë–∞–ª–∞–Ω—Å: ${partner.balance.toLocaleString('ru-RU')} ‚ÇΩ</div>
                </td>
                <td class="p-4">
                    <span class="px-3 py-1 rounded-full text-xs font-bold ${partner.status === 'active' ? 'bg-green-100 text-green-700' : 'bg-gray-100 text-gray-600'}">
                        ${partner.status === 'active' ? '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' : '‚è∏Ô∏è –ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}
                    </span>
                </td>
                <td class="p-4">
                    <div class="flex gap-2">
                        <button onclick="viewPartnerDetails('${partner.id}')" class="text-primary hover:text-primary/80 transition text-sm">
                            üëÅÔ∏è –î–µ—Ç–∞–ª–∏
                        </button>
                        <button onclick="processPayoutModal('${partner.id}')" class="text-green-600 hover:text-green-700 transition text-sm">
                            üí∏ –í—ã–ø–ª–∞—Ç–∞
                        </button>
                    </div>
                </td>
            </tr>
        `;
    }).join('');
}

// View partner details
function viewPartnerDetails(partnerId) {
    const partners = JSON.parse(localStorage.getItem('partners') || '[]');
    const partner = partners.find(p => p.id === partnerId);
    
    if (!partner) return;
    
    alert(`ü§ù –ü–∞—Ä—Ç–Ω–µ—Ä: ${partner.name}\n\n` +
          `üìß Email: ${partner.email}\n` +
          `üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: ${partner.referralCode}\n` +
          `üë• –†–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${partner.referralsCount}\n` +
          `‚úÖ –ö–æ–Ω–≤–µ—Ä—Å–∏–π: ${partner.conversions}\n` +
          `üí∞ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: ${partner.earned.toLocaleString('ru-RU')} ‚ÇΩ\n` +
          `üí≥ –í—ã–ø–ª–∞—á–µ–Ω–æ: ${partner.paid.toLocaleString('ru-RU')} ‚ÇΩ\n` +
          `üíµ –ë–∞–ª–∞–Ω—Å: ${partner.balance.toLocaleString('ru-RU')} ‚ÇΩ\n` +
          `üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${new Date(partner.registrationDate).toLocaleDateString('ru-RU')}`);
}

// Process payout modal
function processPayoutModal(partnerId) {
    const partners = JSON.parse(localStorage.getItem('partners') || '[]');
    const partner = partners.find(p => p.id === partnerId);
    
    if (!partner || partner.balance === 0) {
        alert('‚ö†Ô∏è –£ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –Ω–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤—ã–≤–æ–¥–∞');
        return;
    }
    
    const confirm = window.confirm(`üí∏ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—ã–ø–ª–∞—Ç—É:\n\n` +
                                   `–ü–∞—Ä—Ç–Ω–µ—Ä: ${partner.name}\n` +
                                   `–°—É–º–º–∞: ${partner.balance.toLocaleString('ru-RU')} ‚ÇΩ\n\n` +
                                   `–í—ã–ø–ª–∞—Ç–∏—Ç—å?`);
    
    if (confirm) {
        // Update partner balance
        partner.paid += partner.balance;
        partner.balance = 0;
        
        // Save
        const updatedPartners = partners.map(p => p.id === partnerId ? partner : p);
        localStorage.setItem('partners', JSON.stringify(updatedPartners));
        
        alert(`‚úÖ –í—ã–ø–ª–∞—Ç–∞ ${partner.balance} ‚ÇΩ –¥–ª—è ${partner.name} –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞!`);
        loadPartners();
    }
}

// Open partner settings modal
function openPartnerSettingsModal() {
    const commission = prompt('–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç –∫–æ–º–∏—Å—Å–∏–∏ –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤:', '20');
    const minPayout = prompt('–í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –¥–ª—è –≤—ã–≤–æ–¥–∞ (‚ÇΩ):', '0');
    
    if (commission && minPayout) {
        localStorage.setItem('partnerCommission', commission);
        localStorage.setItem('partnerMinPayout', minPayout);
        alert(`‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:\n\n` +
              `–ö–æ–º–∏—Å—Å–∏—è: ${commission}%\n` +
              `–ú–∏–Ω–∏–º—É–º –¥–ª—è –≤—ã–≤–æ–¥–∞: ${minPayout} ‚ÇΩ`);
    }
}

